[versions]
androidx-activity = "1.7.2"
kotlin = "1.9.10"
ksp = "1.9.10-1.0.13"
agp = "7.4.1"
compose = "1.5.10"
kotlinInject = "0.6.3"
compose-ui-util = "1.4.0"
skiko = "0.7.85"
ktor = "2.3.6"
koin = "3.2.0"
kotlinxSerialization = "1.6.0"
napier = "2.6.1"
decompose = "2.2.2"
reaktive = "1.2.3"
essenty = "1.3.0"
material3 = "1.1.2"
imageLoader = "1.7.0"
multiplatformSettings = "1.1.0"
sqlDelight = "2.0.0"
slf4j = "2.0.9"
jdbc = "3.42.0.0"
coil = "3.0.0-alpha03"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.10.1" }

compose-foundation = { module = 'androidx.compose.foundation:foundation' }
compose-material3 = { module = 'androidx.compose.material3:material3' }
compose-runtime = { module = 'androidx.compose.runtime:runtime' }
compose-ui = { module = 'androidx.compose.ui:ui' }
compose-ui-util = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "compose-ui-util" }

kotlinInject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlinInject' }
kotlinInject-runtime = { module = 'me.tatarka.inject:kotlin-inject-runtime', version.ref = 'kotlinInject' }

skiko-window = { module = "org.jetbrains.skiko:skiko-awt-runtime-windows-x64", version.ref = "skiko" }

# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref= "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-jvm = { module = "io.insert-koin:koin-core-jvm", version.ref = "koin" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# Napier
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
napier-android = { module = "io.github.aakira:napier-android", version.ref = "napier" }
napier-jvm = { module = "io.github.aakira:napier-jvm", version.ref = "napier" }

# Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extention = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }

# Essenty
essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }
essenty-stateKeeper = { group = "com.arkivanov.essenty", name = "state-keeper", version.ref = "essenty" }
essenty-instanceKeeper = { group = "com.arkivanov.essenty", name = "instance-keeper", version.ref = "essenty" }
essenty-backHandler = { group = "com.arkivanov.essenty", name = "back-handler", version.ref = "essenty" }

# Reaktive
reaktive-reaktive = { group = "com.badoo.reaktive", name = "reaktive", version.ref = "reaktive" }
reaktive-reaktiveTesting = { group = "com.badoo.reaktive", name = "reaktive-testing", version.ref = "reaktive" }
reaktive-coroutinesInterop = { group = "com.badoo.reaktive", name = "coroutines-interop", version.ref = "reaktive" }
reaktive-utils = { group = "com.badoo.reaktive", name = "utils-jvm", version.ref = "reaktive" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }

# ImageLoader
#imageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "imageLoader" }
#imageLoader-extention-moko = { module = "io.github.qdsfdhvh:image-loader-extension-moko-resources", version.ref = "imageLoader" }
#imageLoader-extention-blur = { module = "io.github.qdsfdhvh:image-loader-extension-blur", version.ref = "imageLoader" }
#imageLoader-extention-jvm = { module = "io.github.qdsfdhvh:image-loader-extension-imageio", version.ref = "imageLoader" }
#imageLoader-desktop = { module = "io.github.qdsfdhvh:image-loader-desktop", version.ref = "imageLoader" }

# Multiplatform Settings
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }

# SqlDelight
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-jvm-runtime = { module = "app.cash.sqldelight:runtime-jvm", version.ref = "sqlDelight" }
sqlDelight-adapter = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqlDelight" }

jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "jdbc" }

slf4j = { group = "org.slf4j", name = "slf4j-simple", version.ref = "slf4j" }

coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-core = { module = "io.coil-kt.coil3:coil-core", version.ref = "coil" }
coil-core-jvm = { module = "io.coil-kt.coil3:coil-core-jvm", version.ref = "coil" }
coil-core-android = { module = "io.coil-kt.coil3:coil-core-android", version.ref = "coil" }
coil-android = { module = "io.coil-kt.coil3:coil-android", version.ref = "coil" }
coil-core-network = { module = "io.coil-kt.coil3:coil-network-core", version.ref = "coil" }
coil-core-network-jvm = { module = "io.coil-kt.coil3:coil-network-core-jvm", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
#coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil" }
#coil-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil" }

[plugins]
compose-desktop = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = 'org.jetbrains.kotlin.multiplatform', version.ref = 'kotlin' }
kotlin-jvm = { id = 'org.jetbrains.kotlin.jvm', version.ref = 'kotlin' }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }
serialization = { id = "plugin.serialization", version.ref = "kotlin" }
sqlDelght = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }

[bundles]
ktor = [
    "ktor-core",
    "ktor-logging",
    "ktor-serialization",
    "ktor-negotiation"
]
reaktive = [
    "reaktive-reaktive",
    "reaktive-coroutinesInterop"
]